//Pipes
#include <stdio.h>
#include <unistd.h>
#include <string.h>

int main() {
    int fd[2];
    char msg[] = "Hello from parent";
    char buffer[50];

    pipe(fd); // Create pipe

    if (fork() == 0) {
        // Child process
        read(fd[0], buffer, sizeof(buffer));
        printf("Child received: %s\n", buffer);
    } else {
        // Parent process
        write(fd[1], msg, strlen(msg) + 1);
    }

    return 0;
}
//FIFO
writer.c
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    int fd = open("myfifo", O_WRONLY);
    write(fd, "Hello from writer", 18);
    close(fd);
    return 0;
}
reader.c
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    char buffer[50];
    int fd = open("myfifo", O_RDONLY);
    read(fd, buffer, sizeof(buffer));
    printf("Reader received: %s\n", buffer);
    close(fd);
    return 0;
}
